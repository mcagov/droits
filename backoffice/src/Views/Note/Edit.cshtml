@model NoteForm
@{
    ViewData["Title"] = Model.Id == default ? "New Note" : $"Edit Note";

    if (Model.ObjectReference.HasValue())
    {
        ViewData["Title"] += $" For {Model.GetAssociatedEntityInfo().EntityController} ({Model.ObjectReference})";
    }
}

@{
    await Html.RenderPartialAsync("_MessageBanner");
}

<h4>@ViewData["Title"]</h4>

<form class="form-horizontal mt-4" asp-action="Save" enctype="multipart/form-data" method="POST">

    <div class="col mt-4">
        <div class="card">
            <h5 class="card-header">Note</h5>
            <div class="card-body">
                @Html.HiddenFor(m => m.Id)
                @Html.HiddenFor(m => m.DroitId)
                @Html.HiddenFor(m => m.WreckId)
                @Html.HiddenFor(m => m.SalvorId)
                @Html.HiddenFor(m => m.LetterId)
                
                <div class="form-group">
                    @Html.LabelFor(m => m.Title, new { @class = "col-form-label" })
                    @Html.EditorFor(m => m.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.Text, new { @class = "col-form-label" })
                    @Html.EditorFor(m => m.Text, new { htmlAttributes = new { @class = "form-control wysiwyg-editor" } })
                    @Html.ValidationMessageFor(m => m.Text, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Type, new { @class = "col-form-label" })
                    @Html.DropDownListFor(m => m.Type, Html.GetEnumSelectList(typeof(NoteType)), "Select.....", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
                </div>

                <div class="js-files mt-2">
                    <div class="js-files-form-container row">
                        @for (var i = 0; i < Model.DroitFileForms.Count; i++)
                        {
                            <partial name="DroitFile/_DroitFileFormFields" for="DroitFileForms[i]"/>
                        }
                    </div>
                    <div class="col-12 mt-4">
                        <button type="button" class="js-add-file-form mt-2 btn btn-primary">Add File</button>
                    </div>
                </div>
                
                <div class="mt-4 float-end">
                    @{
                        var (controller, entityId) = Model.GetAssociatedEntityInfo();
                    }
                
                    @if (entityId.HasValue)
                    {
                        <a type="button" class="btn btn-secondary" asp-controller="@controller" asp-action="View" asp-route-id="@entityId.Value">Cancel</a>
                    }
                    else
                    {
                        <a type="button" class="btn btn-secondary" asp-action="Index">Cancel</a>
                    }
                    <button class="btn btn-primary" type="submit">Save</button>
                </div>
            </div>
        </div>
    </div>

</form>

