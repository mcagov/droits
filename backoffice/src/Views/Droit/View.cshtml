@using System.Text.Json
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model DroitView
@{
    ViewData["Title"] = "View Droit";
}

@{
    await Html.RenderPartialAsync("_MessageBanner");
}

<div class="row">
    <div class="col-6 col-lg-8">
        <h4>@ViewData["Title"]</h4>
    </div>
    <div class="col-6 col-lg-4 float-end">
        <form asp-action="UpdateDroitStatus" method="POST">
            <div class="row">
                @Html.HiddenFor(m => m.Id)
                <div class="col d-flex btn-group">
                    <div class="input-group flex-grow-1">
                        @Html.DropDownListFor(m => m.Status, Html.GetEnumSelectList(typeof(DroitStatus)), new { @class = "form-control" })
                        <button class="btn btn-primary" type="submit">
                            Update Status
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div>
    <partial name="_StatusBar" model="@Model.Status"/>
</div>

<ul class="nav nav-tabs js-droit-view-tabs" id="droitTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="droit-tab" data-bs-toggle="tab" data-bs-target="#droit" type="button" role="tab" aria-controls="droit" aria-selected="true">Droit</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="salvor-tab" data-bs-toggle="tab" data-bs-target="#salvor" type="button" role="tab" aria-controls="salvor" aria-selected="false">Salvor</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="wreck-tab" data-bs-toggle="tab" data-bs-target="#wreck" type="button" role="tab" aria-controls="wreck" aria-selected="false">Wreck</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="wreck-materials-tab" data-bs-toggle="tab" data-bs-target="#wreck-materials" type="button" role="tab" aria-controls="wreck-materials" aria-selected="false">Wreck Materials</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="location-tab" data-bs-toggle="tab" data-bs-target="#location" type="button" role="tab" aria-controls="location" aria-selected="false">Location</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="salvage-tab" data-bs-toggle="tab" data-bs-target="#salvage" type="button" role="tab" aria-controls="salvage" aria-selected="false">Salvage</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="legacy-tab" data-bs-toggle="tab" data-bs-target="#legacy" type="button" role="tab" aria-controls="legacy" aria-selected="false">Legacy</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="letters-tab" data-bs-toggle="tab" data-bs-target="#letters" type="button" role="tab" aria-controls="letters" aria-selected="false">Letters</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="notes-tab" data-bs-toggle="tab" data-bs-target="#notes" type="button" role="tab" aria-controls="notes" aria-selected="false">Notes</button>
    </li>
    @if (!string.IsNullOrEmpty(Model.OriginalSubmission))
    {
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="submission-tab" data-bs-toggle="tab" data-bs-target="#submission" type="button" role="tab" aria-controls="submission" aria-selected="false">Original Submission</button>
        </li>
    }
</ul>

<div class="tab-content mt-3" id="droitView">
<div class="tab-pane fade show active" id="droit" role="tabpanel" aria-labelledby="droit-tab">
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.Reference, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.Reference)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.Status, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.Status)
        </div>
    </div>
    
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.TriageNumber, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.TriageNumber)
        </div>
    </div>
    
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.AssignedUser, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.AssignedUser)
        </div>
    </div>
    
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.ReportedDate, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.ReportedDate)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.DateFound, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.DateFound)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.Created, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.Created)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.LastModified, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.LastModified)
        </div>
    </div>
    
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.LastModifiedBy, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.LastModifiedBy)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.IsHazardousFind, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.IsHazardousFind)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.IsDredge, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.IsDredge)
        </div>
    </div>
</div>

<div class="tab-pane fade" id="wreck" role="tabpanel" aria-labelledby="wreck-tab">
    @if (Model.Wreck != null)
    {
        <div class="row">
            <div class="row">
                <partial name="Wreck/_WreckViewFields" for="Wreck"/>
               
                @if (Model.Wreck.Latitude != null   && Model.Wreck.Longitude != null)
                {
                    <div class="row mt-3">
                        <iframe src="https://maps.google.com/maps?q=@Model.Wreck?.Latitude,@Model.Wreck?.Longitude&amp;output=embed"></iframe>
                    </div>
                }
                <div class="col d-flex flex-row mt-4 justify-content-end">
                        <a type="button" class="btn btn-primary" target="_blank" asp-action="View" asp-controller="Wreck" asp-route-id="@Model.Wreck?.Id">View Wreck</a>
                </div>
            </div>
            
            <div class="row">
                <h5>Wreck Notes</h5>
                <partial name="_NoteListTable" model="@Model.Wreck?.Notes" />
            </div>
        </div>
    }
    else
    {
        <h5 class="text-center">No Associated Wreck</h5>
    }
</div>


<div class="tab-pane fade" id="salvor" role="tabpanel" aria-labelledby="salvor-tab">
@if (Model.Salvor != null)
{
    <div class="row">
        <div class="row">
            <partial name="Salvor/_SalvorViewFields" for="Salvor" />
            
            <div class="col d-flex flex-row mt-4 justify-content-end">
                <a type="button" class="btn btn-primary" target="_blank" asp-action="View" asp-controller="Salvor" asp-route-id="@Model.Salvor.Id">View Salvor</a>
            </div>
        </div>
        
        <div class="row">
            <h5>Salvor Notes</h5>
            <partial name="_NoteListTable" model="@Model.Salvor.Notes" />
        </div>
    </div>
}

</div>

<div class="tab-pane fade" id="wreck-materials" role="tabpanel" aria-labelledby="wreck-materials-tab">
    
    @if (!Model.WreckMaterials.Any())
    {
        <h5 class="text-center">No Associated Wreck Materials</h5>
    }
    <div class="row row-cols-1 row-cols-lg-2 g-4">
        @for (var i = 0; i < Model.WreckMaterials.Count; i++)
        {
            <partial name="WreckMaterial/_WreckMaterialViewFields"
                     for="WreckMaterials[i]"/>
        }
    </div>
</div>

<div class="tab-pane fade" id="location" role="tabpanel" aria-labelledby="location-tab">
    
    <partial name="_LocationViewFields"/>
    
</div>

<div class="tab-pane fade" id="letters" role="tabpanel" aria-labelledby="letters-tab">
    <div class="row justify-content-end">
        <div class="col-6 col-lg-4 float-end">
            <form asp-controller="Letter" asp-action="AddLetterToDroit" method="POST">
                <div class="row">
                    @Html.Hidden("droitId", Model.Id)
                    <div class="col d-flex btn-group">
                        <div class="input-group flex-grow-1">
                            @Html.DropDownList("Type", Html.GetEnumSelectList(typeof(LetterType)), new { @class = "form-control" })
                            <button class="btn btn-primary" type="submit">
                                Add Letter
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <partial name="_LetterListTable" for="Letters"/>
</div>

<div class="tab-pane fade" id="notes" role="tabpanel" aria-labelledby="notes-tab">
    <div class="row justify-content-end">
        <div class="col-6 col-lg-4 text-end">
            <a type="button" class="btn btn-primary" asp-controller="Note" asp-action="Add" asp-route-DroitId="@Model.Id" asp-route-ObjectReference="@Model.Reference">Add Note</a>
        </div>
    </div>
    <partial name="_NoteListTable" for="Notes"/>
</div>

<div class="tab-pane fade" id="salvage" role="tabpanel" aria-labelledby="salvage-tab">
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.SalvageAwardClaimed, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.SalvageAwardClaimed)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.ServicesDescription, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.ServicesDescription)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.ServicesDuration, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.ServicesDuration)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.ServicesEstimatedCost, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.ServicesEstimatedCost)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.MmoLicenceRequired, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.MmoLicenceRequired)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.MmoLicenceProvided, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.MmoLicenceProvided)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.SalvageClaimAwarded, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.SalvageClaimAwarded)
        </div>
    </div>
</div>

<div class="tab-pane fade" id="legacy" role="tabpanel" aria-labelledby="legacy-tab">
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.District, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.District)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.LegacyFileReference, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.LegacyFileReference)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.GoodsDischargedBy, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.GoodsDischargedBy)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.DateDelivered, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.DateDelivered)
        </div>
    </div>

    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.Agent, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.Agent)
        </div>
    </div>
    
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.RecoveredFromLegacy , new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.RecoveredFromLegacy)
        </div>
    </div>
    
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.ImportedFromLegacy, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.ImportedFromLegacy)
        </div>
    </div>
    
    <div class="form-group row m-1">
        <div class="col-md-3">
            @Html.LabelFor(m => m.LegacyRemarks, new { @class = "font-weight-bold" })
        </div>
        <div class="col-md-7">
            @Html.DisplayFor(m => m.LegacyRemarks)
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.OriginalSubmission))
{
    <div class="tab-pane fade" id="submission" role="tabpanel" aria-labelledby="submission-tab">
        <partial name="_SubmittedData" model="@Model.OriginalSubmission"/>
    </div>
}


<div class="col d-flex flex-row mt-4 justify-content-end">
        <div class="align-self-end">
            <a type="button" class="js-edit-droit-button btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id" asp-route-selectedTab="droit">Edit</a>
            <a type="button" class="btn btn-primary" asp-action="Index">View Droits</a>
        </div>
    </div>
</div>

