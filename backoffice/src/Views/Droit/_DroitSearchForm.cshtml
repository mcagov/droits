@model DroitSearchForm

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="droit-tab" data-bs-toggle="tab" data-bs-target="#droit" type="button" role="tab" aria-controls="droit" aria-selected="true">Droit Report</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="salvor-tab" data-bs-toggle="tab" data-bs-target="#salvor" type="button" role="tab" aria-controls="salvor" aria-selected="false">Salvor</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="wreck-tab" data-bs-toggle="tab" data-bs-target="#wreck" type="button" role="tab" aria-controls="wreck" aria-selected="false">Wreck</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="location-tab" data-bs-toggle="tab" data-bs-target="#location" type="button" role="tab" aria-controls="location" aria-selected="false">Location</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="wreck-materials-tab" data-bs-toggle="tab" data-bs-target="#wreck-materials" type="button" role="tab" aria-controls="wreck materials" aria-selected="false">Wreck Materials</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="salvage-tab" data-bs-toggle="tab" data-bs-target="#salvage" type="button" role="tab" aria-controls="salvage" aria-selected="false">Salvage</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="legacy-tab" data-bs-toggle="tab" data-bs-target="#legacy" type="button" role="tab" aria-controls="legacy" aria-selected="false">Legacy</button>
    </li>
</ul>

<form class="form-horizontal" asp-action="Search" enctype="multipart/form-data" method="POST">

    <div class="d-none">
        @Html.EditorFor(f => f.PageNumber, new { htmlAttributes = new { @class = "js-page-number-field"} })
    </div>

<div class="tab-content mt-4" id="droitForm">
<div class="tab-pane fade show active" id="droit" role="tabpanel" aria-labelledby="droit-tab">
    <div class="form-floating mb-3">
        @Html.EditorFor(m => m.Reference, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
        @Html.LabelFor(m => m.Reference)
    </div>

    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.CreatedFrom, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "" } })
                @Html.LabelFor(m => m.CreatedFrom)
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.CreatedTo, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "" } })
                @Html.LabelFor(m => m.CreatedTo)
            </div>
        </div>
    </div>


    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.LastModifiedFrom, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "" } })
                @Html.LabelFor(m => m.LastModifiedFrom)
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.LastModifiedTo, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "" } })
                @Html.LabelFor(m => m.LastModifiedTo)
            </div>
        </div>
    </div>

    <div class="form-floating mb-3 status-select">
        <select class="form-control js-search-droit-status" id="StatusList" multiple="multiple" name="StatusList" placeholder="">
            @foreach (var o in Html.GetEnumSelectList(typeof(DroitStatus)))
            {
                if (@Model.SelectedStatusList.Contains(int.Parse(o.Value)))
                {
                    <option value="@o.Value" selected="selected">@o.Text</option>
                }
                else
                {
                    <option value="@o.Value">@o.Text</option>

                }
            }
        </select>
    </div>

    <div class="form-floating mb-3 assigned-users-select">
        @Html.DropDownListFor(m => m.AssignedToUserId, Model.AssignedToUsers, "Select RoW", new { @id = "select-user", @class = "form-control js-select-assigned-user" })
        @Html.ValidationMessageFor(m => m.AssignedToUserId, "", new { @class = "text-danger" })
    </div>


    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.ReportedDateFrom, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "" } })
                @Html.LabelFor(m => m.ReportedDateFrom)
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.ReportedDateTo, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "" } })
                @Html.LabelFor(m => m.ReportedDateTo)
            </div>
        </div>
    </div>

    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.DateFoundFrom, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "" } })
                @Html.LabelFor(m => m.DateFoundFrom)
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.DateFoundTo, new { htmlAttributes = new { @type = "date", @class = "form-control", @placeholder = "" } })
                @Html.LabelFor(m => m.DateFoundTo)
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.IsHazardousFind, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.IsHazardousFind, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IsHazardousFind, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.IsDredge, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.IsDredge, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IsDredge, "", new { @class = "text-danger" })
    </div>
</div>

<div class="tab-pane fade" id="location" role="tabpanel" aria-labelledby="location-tab">
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.LatitudeFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.LatitudeFrom, new { @class = "col-form-label" })
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.LatitudeTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.LatitudeTo, new { @class = "col-form-label" })
            </div>
        </div>
    </div>
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.LongitudeFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.LongitudeFrom, new { @class = "col-form-label" })
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.LongitudeTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.LongitudeTo, new { @class = "col-form-label" })
            </div>
        </div>
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.InUkWaters, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.InUkWaters, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.InUkWaters, "", new { @class = "text-danger" })
    </div>
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.DepthFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.DepthFrom, new { @class = "col-form-label" })
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.DepthTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.DepthTo, new { @class = "col-form-label" })
            </div>
        </div>
    </div>

    <div class="form-floating mb-3 status-select">
        <select class="form-control js-search-droit-recovered-from" id="RecoveredFromList" multiple="multiple" name="RecoveredFromList" placeholder="">
            @foreach (var o in Html.GetEnumSelectList(typeof(RecoveredFrom)))
            {
                if (@Model.SelectedRecoveredFromList.Contains(int.Parse(o.Value)))
                {
                    <option value="@o.Value" selected="selected">@o.Text</option>
                }
                else
                {
                    <option value="@o.Value">@o.Text</option>

                }
            }
        </select>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LocationDescription, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.LocationDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.LocationDescription, "", new { @class = "text-danger" })
    </div>
</div>

<div class="tab-pane fade" id="wreck" role="tabpanel" aria-labelledby="wreck-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.IsIsolatedFind, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.IsIsolatedFind, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IsIsolatedFind, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.WreckName, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.WreckName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.WreckName, "", new { @class = "text-danger" })
    </div>

</div>


<div class="tab-pane fade" id="salvor" role="tabpanel" aria-labelledby="salvor-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.SalvorName, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.SalvorName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.SalvorName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="tab-pane fade" id="wreck-materials" role="tabpanel" aria-labelledby="wreck-materials-tab">
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.WreckMaterial, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.WreckMaterial, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.WreckMaterial, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.WreckMaterialOwner, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.WreckMaterialOwner, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.WreckMaterialOwner, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.ValueConfirmed, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ValueConfirmed, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ValueConfirmed, "", new { @class = "text-danger" })
    </div>
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.QuantityFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.QuantityFrom, new { @class = "col-form-label" })
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.QuantityTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.QuantityTo, new { @class = "col-form-label" })
            </div>
        </div>
    </div>
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.ValueFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.ValueFrom, new { @class = "col-form-label" })
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.ValueTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.ValueTo, new { @class = "col-form-label" })
            </div>
        </div>
    </div>
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.ReceiverValuationFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.ReceiverValuationFrom, new { @class = "col-form-label" })
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.ReceiverValuationTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.ReceiverValuationTo, new { @class = "col-form-label" })
            </div>
        </div>
    </div>
</div>


<div class="tab-pane fade" id="salvage" role="tabpanel" aria-labelledby="salvage-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.SalvageAwardClaimed, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.SalvageAwardClaimed, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.SalvageAwardClaimed, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ServicesDescription, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ServicesDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ServicesDescription, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.ServicesDuration, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ServicesDuration, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ServicesDuration, "", new { @class = "text-danger" })
    </div>
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.ServicesEstimatedCostFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.ServicesEstimatedCostFrom, new { @class = "col-form-label" })
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.ServicesEstimatedCostTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.ServicesEstimatedCostTo, new { @class = "col-form-label" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MmoLicenceRequired, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.MmoLicenceRequired, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.MmoLicenceRequired, "", new { @class = "text-danger" })
    </div>
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.MmoLicenceProvided, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.MmoLicenceProvided, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.MmoLicenceProvided, "", new { @class = "text-danger" })
    </div>
    <div class="row form-row">
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.SalvageClaimAwardedFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.SalvageClaimAwardedFrom, new { @class = "col-form-label" })
            </div>
        </div>
        <div class="col">
            <div class="form-floating mb-3">
                @Html.EditorFor(m => m.SalvageClaimAwardedTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(m => m.SalvageClaimAwardedTo, new { @class = "col-form-label" })
            </div>
        </div>
    </div>
</div>


<div class="tab-pane fade" id="legacy" role="tabpanel" aria-labelledby="legacy-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.District, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.District, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.District, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LegacyFileReference, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.LegacyFileReference, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.LegacyFileReference, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.GoodsDischargedBy, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.GoodsDischargedBy, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.GoodsDischargedBy, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DateDelivered, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.DateDelivered, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.DateDelivered, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Agent, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Agent, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Agent, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RecoveredFromLegacy, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.RecoveredFromLegacy, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.RecoveredFromLegacy, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ImportedFromLegacy, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.ImportedFromLegacy, FormModelHelper.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ImportedFromLegacy, "", new { @class = "text-danger" })
    </div>
</div>

<div class="col d-flex flex-row mt-4">
    <div class="col">
        <button class="btn btn-primary" name="SubmitAction" value="Search" type="submit">Search</button>
        <button class="btn btn-primary" name="SubmitAction" value="Export" type="submit">Export</button>
    </div>
    <div class="col ms-auto">
        <div class="float-end">
            <a class="btn btn-primary" asp-action="Index">Reset</a>
            <button class="btn btn-primary js-toggle-droit-search" type="button">Close</button>
        </div>
    </div>
</div>

</div>
</form>