@model DroitForm
@{
    ViewData["Title"] = Model.Id == default ? "New Droit" : $"Droit: {Model.Reference}";
}

@{
    await Html.RenderPartialAsync("_MessageBanner");
}

<h4>@ViewData["Title"]</h4>


@if (Model.Id != default)
{
    <div>
        <partial name="_StatusBar" model=@Model.Status/>
    </div>
}

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="droit-tab" data-bs-toggle="tab" data-bs-target="#droit" type="button" role="tab" aria-controls="droit" aria-selected="true">Droit Report</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="salvor-tab" data-bs-toggle="tab" data-bs-target="#salvor" type="button" role="tab" aria-controls="salvor" aria-selected="false">Salvor</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="wreck-tab" data-bs-toggle="tab" data-bs-target="#wreck" type="button" role="tab" aria-controls="wreck" aria-selected="false">Wreck</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="wreck-materials-tab" data-bs-toggle="tab" data-bs-target="#wreck-materials" type="button" role="tab" aria-controls="wreck-materials" aria-selected="false">Wreck Materials</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="location-tab" data-bs-toggle="tab" data-bs-target="#location" type="button" role="tab" aria-controls="location" aria-selected="false">Location</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="salvage-tab" data-bs-toggle="tab" data-bs-target="#salvage" type="button" role="tab" aria-controls="salvage" aria-selected="false">Salvage</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="legacy-tab" data-bs-toggle="tab" data-bs-target="#legacy" type="button" role="tab" aria-controls="legacy" aria-selected="false">Legacy</button>
    </li>
</ul>

<form class="form-horizontal js-droit-form" asp-action="Save" method="POST">
@Html.HiddenFor(m => m.Id)

<div class="tab-content mt-4" id="droitForm">
<div class="tab-pane fade show active" id="droit" role="tabpanel" aria-labelledby="droit-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.Reference, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Reference, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Reference, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Status, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.Status, Html.GetEnumSelectList(typeof(DroitStatus)), "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })

    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ReportedDate, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ReportedDate, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ReportedDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.DateFound, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.DateFound, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.DateFound, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.IsHazardousFind, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.IsHazardousFind, Model.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IsHazardousFind, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.IsDredge, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.IsDredge, Model.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IsDredge, "", new { @class = "text-danger" })
    </div>
</div>

<div class="tab-pane fade" id="salvor" role="tabpanel" aria-labelledby="salvor-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.SalvorId, "Select Salvor", new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.SalvorId, Model.AllSalvors, "New Salvor..", new { @id = "js-select-salvor", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.SalvorId, "", new { @class = "text-danger" })
    </div>

    <div class="d-none" id="js-salvor-form-fields">
        <partial name="Salvor/_SalvorFormFields" for="SalvorForm"/>
    </div>

    <div class="js-salvor-preview">

    </div>
</div>
<div class="tab-pane fade" id="wreck" role="tabpanel" aria-labelledby="wreck-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.IsIsolatedFind, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.IsIsolatedFind, Model.BooleanSelectList, "Select.....", new { @id = "js-select-isolated-find", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IsIsolatedFind, "", new { @class = "text-danger" })
    </div>
    <div class="js-known-wreck">
        <div class="form-group">
            @Html.LabelFor(m => m.WreckId, "Select Wreck", new { @class = "col-form-label" })
            @Html.DropDownListFor(m => m.WreckId, Model.AllWrecks, "New Wreck..", new { @id = "js-select-wreck", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.WreckId, "", new { @class = "text-danger" })
        </div>

        <div class="d-none" id="js-wreck-form-fields">
            <partial name="Wreck/_WreckFormFields" for="WreckForm"/>
        </div>

        <div class="js-wreck-preview">

        </div>
    </div>
</div>


<div class="tab-pane fade" id="wreck-materials" role="tabpanel" aria-labelledby="wreck-materials-tab">
    <div id="js-wreck-materials-form-container" class="row">
        @for (var i = 0; i < Model.WreckMaterialForms.Count; i++)
        {
            <partial name="WreckMaterial/_WreckMaterialFormFields"
                     for="WreckMaterialForms[i]"/>
        }
    </div>
    <div class="mt-4 float-end">
        <button type="button" id="js-add-wreck-material-form" class="mt-2 btn btn-primary">Add Wreck Material</button>
    </div>
</div>

<div class="tab-pane fade" id="location" role="tabpanel" aria-labelledby="location-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.Latitude, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Latitude, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Latitude, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Longitude, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Longitude, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Longitude, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.InUkWaters, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.InUkWaters, Model.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.InUkWaters, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LocationRadius, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.LocationRadius, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.LocationRadius, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Depth, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Depth, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Depth, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LocationDescription, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.LocationDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.LocationDescription, "", new { @class = "text-danger" })
    </div>
</div>


<div class="tab-pane fade" id="salvage" role="tabpanel" aria-labelledby="salvage-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.SalvageAwardClaimed, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.SalvageAwardClaimed, Model.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.SalvageAwardClaimed, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ServicesDescription, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ServicesDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ServicesDescription, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ServicesDuration, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ServicesDuration, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ServicesDuration, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ServicesEstimatedCost, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.ServicesEstimatedCost, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ServicesEstimatedCost, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MMOLicenceRequired, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.MMOLicenceRequired, Model.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.MMOLicenceRequired, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MMOLicenceProvided, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.MMOLicenceProvided, Model.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.MMOLicenceProvided, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SalvageClaimAwarded, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.SalvageClaimAwarded, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.SalvageClaimAwarded, "", new { @class = "text-danger" })
    </div>
</div>


<div class="tab-pane fade" id="legacy" role="tabpanel" aria-labelledby="legacy-tab">
    <div class="form-group">
        @Html.LabelFor(m => m.District, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.District, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.District, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LegacyFileReference, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.LegacyFileReference, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.LegacyFileReference, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.GoodsDischargedBy, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.GoodsDischargedBy, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.GoodsDischargedBy, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DateDelivered, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.DateDelivered, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.DateDelivered, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Agent, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.Agent, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Agent, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RecoveredFrom, new { @class = "col-form-label" })
        @Html.EditorFor(m => m.RecoveredFrom, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.RecoveredFrom, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ImportedFromLegacy, new { @class = "col-form-label" })
        @Html.DropDownListFor(m => m.ImportedFromLegacy, Model.BooleanSelectList, "Select.....", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ImportedFromLegacy, "", new { @class = "text-danger" })
    </div>
</div>

<div class="col d-flex flex-row mt-4">
    <div class="align-self-end">
        <a type="button" class="btn btn-secondary" asp-action="Index">Cancel</a>
        <button class="btn btn-primary" type="submit">Save</button>
    </div>
</div>
</div>
</form>