name: Destroy terraform

permissions:
  contents: read
  pull-requests: write
  id-token: write

on:
  workflow_call:
    inputs:
      environment:
        description: >
          The application environment which should be destroyed.  Must be one of development/staging/production
          and must match the terraform_workspace input.
        type: string
        required: true
      terraform_workspace:
        description: >
          The Terraform workspace where infrastructure should be destroyed.  Must be one of dev/staging/production and
          must match the environment input.
        type: string
        required: true
    secrets:
      aws_role_arn:
        required: true
      aws_account_number:
        description: The account number in which infrastructure should be destroyed
        required: true
      db_username:
        description: The username for the master db
        required: true
      db_password:
        description: The password for the master db
        required: true
      registry_url:
        description: The URL of the registry where the image is published
        required: true
      webapp_repository_name:
        description: The name of the published webapp image
        required: true
      backoffice_repository_name:
        description: The name of the published backoffice image
        required: true
      alert_email_address:
        description: Email that will receive alert alarms
        required: true
      webapp_env_file:
        description: The contents of the environment file
        required: true
      backoffice_env_file:
        description: The contents of the environment file
        required: true

defaults:
  run:
    working-directory: terraform
    
jobs:
  destroy:
    name: Destroy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      TF_WORKSPACE: ${{ inputs.terraform_workspace }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.image_tag }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws_role_arn }}
          aws-region: eu-west-2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ">=1.5.0"
      - name: Terraform init
        run: terraform init -backend-config=tfvars/${{ inputs.terraform_workspace }}-backend.tfvars
      - name: Terraform validate
        run: terraform validate
      - name: Terraform destroy
        if: always() # Prevent terraform destroy from being interrupted and causing state lock issues
        env:
          TF_VAR_ecr_repository_url: ${{ secrets.registry_url }}
          TF_VAR_backoffice_ecr_repository_name: ${{ secrets.backoffice_repository_name }}
          TF_VAR_webapp_ecr_repository_name: ${{ secrets.webapp_repository_name }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
          TF_VAR_aws_account_number: ${{ secrets.aws_account_number }}
          TF_VAR_db_username: ${{ secrets.db_username }}
          TF_VAR_db_password: ${{ secrets.db_password }}
          TF_VAR_alert_email_address: ${{secrets.alert_email_address}}
          TF_VAR_backoffice_environment_file: ${{ secrets.backoffice_env_file }}
          TF_VAR_webapp_environment_file: ${{ secrets.webapp_env_file }}
        run: terraform destroy -input=false -auto-approve -var-file=tfvars/${{ inputs.terraform_workspace }}.tfvars
