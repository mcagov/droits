name: Deploy terraform

on:
  workflow_call:
    inputs:
      environment:
        description: >
          The environment to which the application should be deployed.  Must be one of development/staging/production
          and must match the terraform_workspace input.
        type: string
        required: true
      terraform_workspace:
        description: >
          The Terraform workspace to which infrastructure should be deployed.  Must be one of dev/staging/production and
          must match the environment input.
        type: string
        required: true
      image_tag:
        description: The version of the artifacts/infrastructure to deploy.
        required: true
        type: string
    secrets:
      aws_role_arn:
        required: true
      aws_account_number:
        description: The account number in which infrastructure should be deployed
        required: true
      db_username:
        description: The username for the master db
        required: true
      db_password:
        description: The password for the master db
        required: true
      registry_url:
        description: The URL of the registry where the image should be published
        required: true
      webapp_repository_name:
        description: The name of the webapp image to be published
        required: true
      backoffice_repository_name:
        description: The name of the backoffice image to be published
        required: true
      alert_email_address:
        description: Email that will receive alert alarms
        required: true

defaults:
  run:
    working-directory: terraform
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      TF_WORKSPACE: ${{ inputs.terraform_workspace }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.image_tag }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.aws_role_arn }}
          aws-region: eu-west-2
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2
      - name: Terraform init
        run: terraform init
      - name: Terraform validate
        run: terraform validate
      - name: Terraform deploy
        if: always() # Prevent terraform deploy from being interrupted and causing state lock issues
        env:
          TF_VAR_ecr_repository_url: ${{ secrets.registry_url }}
          TF_VAR_api_backoffice_ecr_repository_name: ${{ secrets.backoffice_repository_name }}
          TF_VAR_webapp_ecr_repository_name: ${{ secrets.webapp_repository_name }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
          TF_VAR_aws_account_number: ${{ secrets.aws_account_number }}
          TF_VAR_db_username: ${{ secrets.db_username }}
          TF_VAR_db_password: ${{ secrets.db_password }}
          TF_VAR_alert_email_address: ${{secrets.alert_email_address}}
        run: terraform apply -input=false -auto-approve -var-file=${{ inputs.terraform_workspace }}.tfvars
