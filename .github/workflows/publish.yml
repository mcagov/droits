name: Publishing application

on:
  workflow_call:
    inputs:
      image_tag:
        description: The tag to add to the published Docker image, e.g. "v1.0.1"
        type: string
        required: true
      working-directory:
        description: The directory to publish
        type: string
        required: true
      environment:
        description: >
          The environment to which the application should be deployed.  Must be one of dev/staging/production
          and must match the terraform_workspace input.
        type: string
        required: true
      env_filename:
          type: string
          description: The name of the environment file
          required: true
    secrets:
      registry_url:
        description: The URL of the registry where the image should be published
        required: true
      repository_name:
        description: The name of the image to be published
        required: true
      aws_role_arn:
        required: true
      env_file:
        description: The contents of the environment file
        required: true
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    name: Publish ${{ inputs.working-directory }} image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.aws_role_arn }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY_URL: ${{ secrets.registry_url }}
        ECR_REPOSITORY_NAME: ${{ secrets.repository_name }}
        IMAGE_TAG: ${{ inputs.image_tag }}
        DIRECTORY: ${{ inputs.working-directory }}
        ENV_FILE: ${{secrets.env_file}}
        ENV_FILENAME: ${{ inputs.env_filename }}

      run: |
        cd $DIRECTORY
        # Create env file
        echo -e $ENV_FILE > $ENV_FILENAME
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY_URL/$ECR_REPOSITORY_NAME:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY_URL/$ECR_REPOSITORY_NAME:$IMAGE_TAG
