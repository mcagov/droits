name: AWS ECR push Backoffice

on:
  workflow_call:
    inputs:
      tag:
        description: The tag to add to the published Docker image, e.g. "v1.0.1"
        type: string
        required: true
      environment:
        description: >
          The environment to which the application should be deployed.  Must be one of development/staging/production
          and must match the terraform_workspace input.
        type: string
        required: true
    secrets:
      registry_url:
        description: The URL of the registry where the image should be published
        required: true
      repository_name:
        description: The name of the image to be published
        required: true
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_session_token:
        required: true

defaults:
  run:
    working-directory: backoffice

jobs:
  deploy:
    name: Publish image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.aws_access_key_id }}
        aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
        aws-session-token:  ${{ secrets.aws_session_token }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ secrets.registry_url }}
        ECR_REPOSITORY: ${{ secrets.repository_name }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
